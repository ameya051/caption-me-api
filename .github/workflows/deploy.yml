name: Deploy to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/caption-me-api || exit 1
            git pull || exit 1
            mkdir -p logs
            touch .env
            echo "${{ secrets.PROD }}" > .env
            pnpm install --frozen-lockfile || exit 1
            pnpm build || exit 1
            pm2 reload ecosystem.config.js --update-env || exit 1

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "master" ]


# jobs:
#   build:

#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: pnpm install --frozen-lockfile
#     - run: pnpm build --if-present
#     - run: |
#           mdkir -p logs
#           touch .env
#           echo "${{ secrets.PROD }}" > .env
#     - run: pm2 reload ecosystem.config.js --update-env
